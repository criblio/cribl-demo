apiVersion: v1
data:
  admin-password: Y3JpYmxkZW1v
  admin-token: c0t2UXNSWUI5T1R3RzUzUXN6UnlvRVlkNnQ5OVhwX0hsRzI5R3hEczFzZnhlcDdYSGtNUFdycUtyb01zOG1Tb0dQb2tJdlVsSnVwdGNFU2VfWDh1aWc9PQ==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.0.6
    helm.sh/chart: influxdb2-2.0.1
  name: influxdb2-auth
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.0.6
    helm.sh/chart: influxdb2-2.0.1
  name: influxdb2
spec:
  ports:
  - name: http
    port: 8086
    protocol: TCP
    targetPort: 8086
  selector:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/name: influxdb2
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb2-internal
spec:
  ports:
  - name: http
    port: 8086
    protocol: TCP
    targetPort: 8086
  selector:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/name: influxdb2
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.0.6
    helm.sh/chart: influxdb2-2.0.1
  name: influxdb2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.0.6
    helm.sh/chart: influxdb2-2.0.1
  name: influxdb2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb2
      app.kubernetes.io/name: influxdb2
  serviceName: influxdb2
  template:
    metadata:
      annotations:
        appscope.dev/disable: "true"
      labels:
        app.kubernetes.io/instance: influxdb2
        app.kubernetes.io/name: influxdb2
    spec:
      containers:
      - env:
        - name: DOCKER_INFLUXDB_INIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: adminpass
              name: demo-admin
        - name: DOCKER_INFLUXDB_INIT_MODE
          value: setup
        - name: DOCKER_INFLUXDB_INIT_USERNAME
          value: admin
        - name: DOCKER_INFLUXDB_INIT_ORG
          value: cribl
        - name: DOCKER_INFLUXDB_INIT_BUCKET
          value: cribl
        - name: DOCKER_INFLUXDB_INIT_RETENTION
          value: 0s
        - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              key: admin-token
              name: influxdb2-auth
        - name: INFLUXD_BOLT_PATH
          value: /var/lib/influxdbv2/influxd.bolt
        - name: INFLUXD_ENGINE_PATH
          value: /var/lib/influxdbv2
        - name: SCOPE_TAG_service
          value: influxdb
        image: influxdb:2.0.8-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: influxdb2
        ports:
        - containerPort: 8086
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources: 
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/lib/influxdbv2
          name: data
        command:
        - "/bin/bash"
        - "-c"
        - |
          while [ true ]; do
            apk add grep
            if [ $? -eq 0 ]; then
              break
            fi
          done
          /entrypoint.sh influxd
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - |
                  set -x
                  sleep 20
                  bucketid=""
                  while [ -z "$bucketid" ]; do
                    bucketid=$(influx bucket ls \
                    -t sKvQsRYB9OTwG53QszRyoEYd6t99Xp_HlG29GxDs1sfxep7XHkMPWrqKroMs8mSoGPokIvUlJuptcESe_X8uig== \
                    --host http://localhost:8086 --org cribl --name cribl --json | grep -oP "id\"\s*:\s*\"\K[^\"]+")
                    echo "BucketID: $s" >> /tmp/influx-lf-out
                    if [ -z "$bucketid" ]; then 
                      sleep 5
                    fi
                  done
                  influx v1 dbrp create --bucket-id $bucketid \
                    --db cribl --default --org cribl --rp forever --host http://localhost:8086/ \
                    -t sKvQsRYB9OTwG53QszRyoEYd6t99Xp_HlG29GxDs1sfxep7XHkMPWrqKroMs8mSoGPokIvUlJuptcESe_X8uig== 2>&1 >>/tmp/influx-lf-out
                  influx apply --force true -f https://cdn.cribl.io/sbx-data/logstream_metrics_sandbox.yml \
                    --host http://localhost:8086/ -o cribl \
                    -t sKvQsRYB9OTwG53QszRyoEYd6t99Xp_HlG29GxDs1sfxep7XHkMPWrqKroMs8mSoGPokIvUlJuptcESe_X8uig== 2>&1 >>/tmp/influx-lf-out
                  for url in https://raw.githubusercontent.com/influxdata/community-templates/master/k8s/k8s.yml https://raw.githubusercontent.com/criblio/community-templates/master/criblio_logstream/cribl_logstream.yml /var/tmp/influx-templates/*.yml ; do \
                    influx apply --force true -f $url \
                      --host http://localhost:8086 \
                      -o cribl \
                      -t ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN} 2>&1 >>/tmp/influx-lf-out
                  done
                  echo "end of lf file cat"
                  cat /tmp/influx-lf-out
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: influxdb2
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.0.6
    helm.sh/chart: influxdb2-2.0.1
  name: influxdb2
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb2
      app.kubernetes.io/name: influxdb2
