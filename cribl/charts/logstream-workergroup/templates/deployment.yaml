apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logstream-workergroup.fullname" . }}
  labels:
    {{- include "logstream-workergroup.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "logstream-workergroup.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "logstream-workergroup.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "logstream-workergroup.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: CRIBL_DIST_MASTER_URL
              valueFrom:
                secretKeyRef:
                  name: logstream-config-{{ include "logstream-workergroup.fullname" . }}
                  key: url-master
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          ports: 
            {{-  range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: {{ .Values.config.healthPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: dockersock
            mountPath: "/var/run/docker.sock"
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
